import openai
import telebot
import os
import requests
from io import BytesIO
from pdfminer.high_level import extract_text
import pandas as pd
from PIL import Image

# –ó–∞–≥—Ä—É–∂–∞–µ–º API-–∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
openai.api_key = os.getenv("OPENAI_API_KEY")
bot = telebot.TeleBot(os.getenv("TELEGRAM_BOT_TOKEN"))

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤ (–¥–ª—è 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
chat_history = []

@bot.message_handler(func=lambda message: True, content_types=['text'])
def handle_text(message):
    """ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç """
    global chat_history

    chat_history.append({"role": "user", "content": message.text})

    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=chat_history
    )

    reply = response.choices[0].message["content"]
    chat_history.append({"role": "assistant", "content": reply})

    bot.send_message(message.chat.id, reply)

@bot.message_handler(content_types=['document', 'photo'])
def handle_file(message):
    """ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (PDF, Excel, –§–æ—Ç–æ) """
    file_id = message.document.file_id if message.document else message.photo[-1].file_id
    file_info = bot.get_file(file_id)
    file_url = f"https://api.telegram.org/file/bot{os.getenv('TELEGRAM_BOT_TOKEN')}/{file_info.file_path}"
    
    file_data = requests.get(file_url).content
    file_extension = file_info.file_path.split('.')[-1].lower()

    if file_extension in ['png', 'jpg', 'jpeg']:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        image = Image.open(BytesIO(file_data))
        bot.send_message(message.chat.id, "–Ø –ø–æ–ª—É—á–∏–ª —Ñ–æ—Ç–æ, –Ω–æ –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –µ–≥–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å üòî")
    
    elif file_extension in ['pdf']:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ PDF
        pdf_text = extract_text(BytesIO(file_data))
        bot.send_message(message.chat.id, f"–í–æ—Ç —Ç–µ–∫—Å—Ç –∏–∑ PDF:\n\n{pdf_text[:4000]}")

    elif file_extension in ['xls', 'xlsx', 'csv']:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü
        df = pd.read_excel(BytesIO(file_data)) if 'xls' in file_extension else pd.read_csv(BytesIO(file_data))
        bot.send_message(message.chat.id, f"–¢–∞–±–ª–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏:\n\n{df.head().to_string()}")

    else:
        bot.send_message(message.chat.id, "–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è ‚ùå")

@bot.message_handler(commands=['clear'])
def clear_chat(message):
    """ –û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ """
    global chat_history
    chat_history = []
    bot.send_message(message.chat.id, "–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞ ‚úÖ")

bot.polling()
